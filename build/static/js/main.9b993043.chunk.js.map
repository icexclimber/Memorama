{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","useEffect","prevCards","map","resetTurn","setTimeout","console","log","prevTurns","shuffledCards","sort","Math","random","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEe,SAASA,EAAT,GAAiE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAO/D,OACI,qBAAKC,UAAW,OAAhB,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAW,QAAQC,IAAKL,EAAKK,IAAKC,IAAK,eAC5C,qBACAF,UAAW,OACXC,IAAK,iBACLE,QAZU,WACXJ,GACLF,EAAaD,IAWPM,IAAI,mBCblB,IAAME,EAAa,CACjB,CAAC,IAAO,iBAAmBC,SAAQ,GACnC,CAAC,IAAO,iBAAmBA,SAAQ,GACnC,CAAC,IAAO,iBAAmBA,SAAQ,GACnC,CAAC,IAAO,iBAAmBA,SAAQ,GACnC,CAAC,IAAO,iBAAmBA,SAAQ,GACnC,CAAC,IAAO,iBAAmBA,SAAQ,IAoFtBC,MAjFf,WACE,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA+BR,oBAAS,GAAxC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAgBMnB,EAAe,SAACD,GACpBgB,EAAYG,EAAcnB,GAAOiB,EAAajB,IAKhDqB,qBAAU,WACLL,GAAaE,IACdE,GAAY,GACTJ,EAAUX,MAAQa,EAAUb,KAC7BQ,GAAS,SAAAS,GACP,OAAOA,EAAUC,KAAI,SAAAvB,GACnB,OAAGA,EAAKK,MAAQW,EAAUX,IACjB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,QAIbwB,KAEAC,YAAW,kBAAMD,MAAa,QAGjC,CAACR,EAAUE,IAEdQ,QAAQC,IAAIf,GAGV,IAAMY,EAAY,WAChBP,EAAa,MACbE,EAAa,MACbJ,GAAU,SAAAa,GAAS,OAAIA,EAAY,KACnCR,GAAY,IAMhB,OAFEC,qBAAU,cAAU,IAGpB,sBAAKjB,UAAU,MAAf,UACE,0CACA,wBAAQG,QAvDS,WACnB,IAAMsB,EAAgB,UAAIrB,EAAeA,GACtCsB,MAAK,kBAAMC,KAAKC,SAAW,MAC3BT,KAAI,SAACvB,GAAD,mBAAC,eAAcA,GAAf,IAAqBiC,GAAGF,KAAKC,cAElCf,EAAa,MACbE,EAAa,MACbN,EAASgB,GACTd,EAAS,IA+CT,yBAEA,qBAAKX,UAAU,YAAf,SACGQ,EAAMW,KAAK,SAAAvB,GAAI,OACd,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAgBA,EAChBC,QAASF,IAASgB,GAAahB,IAASkB,GAAclB,EAAKS,QAC3DN,SAAYA,GAJLH,EAAKiC,SAQlB,wCAAWnB,SCpFjBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9b993043.chunk.js","sourcesContent":["import './SingleCard.css'\r\n\r\nexport default function SingleCard( { card, handleChoice, flipped, disabled }) {\r\n\r\n    const handleClick = () => {\r\n        if (!disabled) {\r\n        handleChoice(card)\r\n    }\r\n    }\r\n    return (\r\n        <div className =\"card\" >\r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n              <img className =\"front\" src={card.src} alt= \"card front\" />\r\n              <img\r\n              className =\"back\"\r\n              src =\"/img/cover.png\"\r\n              onClick = {handleClick}\r\n              alt=\"card back\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react'\nimport './App.css'\nimport SingleCard from './components/SingleCard'\n\nconst cardImages = [\n  {\"src\": \"/img/card1.png\" , matched:false},\n  {\"src\": \"/img/card2.png\" , matched:false},\n  {\"src\": \"/img/card3.png\" , matched:false},\n  {\"src\": \"/img/card4.png\" , matched:false},\n  {\"src\": \"/img/card5.png\" , matched:false},\n  {\"src\": \"/img/card6.png\" , matched:false},\n]\n\nfunction App() {\n  const [cards,setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] =useState(false)\n\n  //shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages,... cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({...card, id:Math.random() }))\n\n      setChoiceOne(null)\n      setChoiceTwo(null)\n      setCards(shuffledCards)\n      setTurns(0)\n  }\n\n  //handle a choice\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo (card): setChoiceOne(card)\n  }\n\n  //compare 2 selected cards\n\n  useEffect(() => {\n    if(choiceOne && choiceTwo) {\n      setDisabled(true) \n      if(choiceOne.src === choiceTwo.src){\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if(card.src === choiceOne.src) {\n              return {...card, matched: true }\n            } else{\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        setTimeout(() => resetTurn(), 1000)\n      }\n    }\n  }, [choiceOne,choiceTwo])\n\n  console.log(cards)\n\n  //reset choices & increase turn\n    const resetTurn = () => {\n      setChoiceOne(null)\n      setChoiceTwo(null)\n      setTurns (prevTurns => prevTurns + 1)\n      setDisabled(false)\n    }\n\n    //start new game \n    useEffect(() => {}, [])\n\n  return (\n    <div className=\"App\">\n      <h1>Memorama</h1>\n      <button onClick={shuffleCards}>Juego Nuevo</button>\n\n      <div className=\"card-grid\">\n        {cards.map (card => (\n          <SingleCard\n            key = {card.id}\n            card={card}\n            handleChoice = {handleChoice}\n            flipped={card === choiceOne || card === choiceTwo  || card.matched}\n            disabled = {disabled}\n            /> \n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}